{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d8cde22a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import scipy.stats as st\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "12fca680",
   "metadata": {},
   "outputs": [],
   "source": [
    "N = 50\n",
    "x = st.expon.rvs(scale = 0.5, size = N)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "c9a21a65",
   "metadata": {},
   "outputs": [],
   "source": [
    "grid = np.linspace(-1,10,N)\n",
    "# grid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "44590fc3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x147ac1700>]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(st.expon.pdf(scale = 0.5, x=grid))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "812e244f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
