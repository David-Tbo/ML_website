{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analysis of Variance (ANOVA)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import os\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy.stats as stats"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "About the dataset CarPrice_Assignment.csv\n",
    "\n",
    "https://www.kaggle.com/datasets/aminesnoussi/carprice-assignmentcsv?resource=download"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Â Load the data\n",
    "rep = '/Users/davidtbo/Documents/Data_Science/99_Data'\n",
    "df = pd.read_csv(os.path.join(rep, 'CarPrice_Assignment.csv'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'\\n\\nSTATISTICAL COMPARISON OF GROUPS\\n\\n'"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "\n",
    "STATISTICAL COMPARISON OF GROUPS\n",
    "\n",
    "'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['car_ID', 'symboling', 'CarName', 'fueltype', 'aspiration',\n",
       "       'doornumber', 'carbody', 'drivewheel', 'enginelocation', 'wheelbase',\n",
       "       'carlength', 'carwidth', 'carheight', 'curbweight', 'enginetype',\n",
       "       'cylindernumber', 'enginesize', 'fuelsystem', 'boreratio', 'stroke',\n",
       "       'compressionratio', 'horsepower', 'peakrpm', 'citympg', 'highwaympg',\n",
       "       'price'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# We create the variable \"make\":\n",
    "\n",
    "df['make'] = df['CarName'].apply(lambda x : str(x).split()[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.groupby('make')['price'].mean().sort_values().plot(kind='bar')\n",
    "plt.title('Averge price in $ per make')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see a trend of increasing prices as we move right along of the graph.  \n",
    "But which category of the make feature has the most and has the least impact on the price prediction ?  \n",
    "To analyse categorical variable such as \"make\" variable we can use ANOVA method:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#Â Why do we perform ANOVA ?\n",
    "\n",
    "- Finding correlation between different groups of a categorical variables."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## What do we obtain from ANOVA ?\n",
    "\n",
    "- F-test score : variation between sample group means divided by variation within sample group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<img src=\"/Users/davidtbo/Documents/Data_Science/03_Linear_Model/png/anova.png\" width=\"800\">"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from IPython.display import HTML\n",
    "\n",
    "# Chemin vers le fichier .png\n",
    "image_path = '/Users/davidtbo/Documents/Data_Science/03_Linear_Model/png/anova.png'\n",
    "\n",
    "# Afficher l'image en utilisant une balise HTML\n",
    "display(HTML(f'<img src=\"{image_path}\" width=\"800\">'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "source https://www.datanovia.com/en/lessons/anova-in-r/  \n",
    "\n",
    "BAsics\n",
    "\n",
    "Assume that we have 3 groups to compare, as illustrated in the image above. The dashed line indicates the group mean.  \n",
    "The figure shows the variation between the means of the groups (panel A) and the variation within each group (panel B), also known as residual variance.\n",
    "\n",
    "The idea behind the ANOVA test is very simple: \n",
    "- if the average variation between groups is large enough compared to the average variation within groups, then you could conclude that at least one group mean is not equal to the others.\n",
    "\n",
    "Thus, itâs possible to evaluate whether the differences between the group means are significant by comparing the two variance estimates.  \n",
    "This is why the method is called analysis of variance even though the main goal is to compare the group means."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Briefly, the mathematical procedure behind the ANOVA test is as follow:\n",
    "\n",
    "Compute the within-group variance, also known as residual variance.  \n",
    "This tells us, how different each participant is from their own group mean (see figure, panel B).  \n",
    "Compute the variance between group means (see figure, panel A).  \n",
    "Produce the F-statistic as the **ratio of Sum of variance.between.groups / Sum of variance.within.groups**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that, a lower F value (F < 1) indicates that there are no significant difference between the means of the samples being compared.  \n",
    "\n",
    "However, a higher ratio implies that the variation among group means are greatly different from each other compared to the variation of the individual observations in each groups."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Assumptions\n",
    "\n",
    "The ANOVA test makes the following assumptions about the data:\n",
    "\n",
    "Independence of the observations. Each subject should belong to only one group.  \n",
    "There is no relationship between the observations in each group. Having repeated measures for the same participants is not allowed.\n",
    "No significant outliers in any cell of the design \n",
    "Normality. the data for each design cell should be approximately normally distributed.  \n",
    "Homogeneity of variances. The variance of the outcome variable should be equal in every cell of the design.  \n",
    "Before computing ANOVA test, you need to perform some preliminary tests to check if the assumptions are met.\n",
    "\n",
    "Note that, if the above assumptions are not met there are a non-parametric alternative (Kruskal-Wallis test) to the one-way ANOVA.\n",
    "\n",
    "Unfortunately, there are no non-parametric alternatives to the two-way and the three-way ANOVA.  Thus, in the situation where the assumptions are not met, you could consider running the two-way/three-way ANOVA on the transformed and non-transformed data to see if there are any meaningful differences.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Â Group Honda's prices:\n",
    "\n",
    "mask = df['make'] == 'honda'\n",
    "group_honda = df[mask]['price']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Â Group Subaru's prices:\n",
    "\n",
    "mask = df['make'] == 'subaru'\n",
    "group_subaru = df[mask]['price']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "F_onewayResult(statistic=0.19744030127462606, pvalue=0.6609478240622193)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Â ANOVA F-test:\n",
    "\n",
    "import scipy.stats as stats\n",
    "\n",
    "stats.f_oneway(group_honda, group_subaru)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "F-test is small but the large pvalue makes the result uncertain.\n",
    "\n",
    "Let's try another test between, Honda and Jaguar."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Â Group Subaru's prices:\n",
    "\n",
    "mask = df['make'] == 'jaguar'\n",
    "group_jaguar = df[mask]['price']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "F_onewayResult(statistic=400.925870564337, pvalue=1.0586193512077862e-11)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stats.f_oneway(group_honda, group_jaguar)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "F-statisic is large and pvalue < 0.001 (certain of the result).  \n",
    "\n",
    "In this case we can conclude that the prices between \"Honda\" and \"Jaguar\" are significantly different."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
